import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

data = {
    'title': ['Inception', 'The Dark Knight', 'Interstellar', 'The Prestige', 'Memento'],
    'genre': ['Action Sci-Fi', 'Action Crime Drama', 'Adventure Drama Sci-Fi', 'Drama Mystery Sci-Fi', 'Mystery Thriller'],
    'description': [
        'A thief who steals corporate secrets through dream-sharing technology.',
        'Batman sets out to dismantle the remaining criminal organizations.',
        'A team of explorers travel through a wormhole in space.',
        'Two stage magicians engage in a battle to create the ultimate illusion.',
        'A man with short-term memory loss attempts to track down his wifeâ€™s murderer.'
    ]
}

df = pd.DataFrame(data)
df['features'] = df['genre'] + ' ' + df['description']
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['features'])
cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

def recommend_movies(title, cosine_sim=cosine_sim):
    idx = df[df['title'] == title].index[0]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:4]
    movie_indices = [i[0] for i in sim_scores]
    return df['title'].iloc[movie_indices]

print(recommend_movies('Inception'))
